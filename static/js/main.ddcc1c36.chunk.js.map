{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","TodosList","this","todos","map","addTodoProps","React","Component","Header","padding","lineHeight","fontSize","marginBottom","float","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","onSubmit","placeholder","ToDoContainer","uuidv4","handleChange","prevState","console","log","delTodo","filter","addTodo","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddcc1c36.chunk.js","sourcesContent":["import React from \"react\"\n\n//two ways to create the component... \n\n//1. Class Method \n\n// class TodoItem extends React.Component {\n//     render() {\n//         return (\n//             <li>{this.props.todo.title}</li>\n//         )\n//     }\n// }\n\n\n\n// 2. function method \n//doesnt require render method \n\n//prefered to create react components only with functions && hooks\n\nfunction TodoItem(props) {\n\n    const completedStyle = {\n        fontStyle: \"italic\",\n        color: \"#d35e0f\",\n        opacity: 0.4,\n        textDecoration: \"line-through\",\n    }\n\nconst { completed, id, title } = props.todo    \n    return (\n\n    <ul className=\"todo-item\">\n\n            <input \n            type=\"checkbox\" \n            checked={completed} \n            //final child recieves access to change state in parent comp. TodoContainer\n            onChange={()=>props.handleChangeProps(id)}\n            />\n\n            <button \n            onClick={()=> props.deleteTodoProps(id)}> \n                delete \n            </button>\n            \n            <span \n\n            //Ternary Operator, inline-if statment: \n            //(condition) ? (true return value) : (false return value)\n            style={props.todo.completed ? completedStyle : null }>\n               {props.todo.title}\n            </span>\n    </ul>)\n        \n    // return <ul><input type=\"checkbox\" />{props.todo.title}</ul>\n }\n\n\n\n\n\n\n\n\n\n\n\n\nexport default TodoItem","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\n\nclass TodosList extends React.Component {\n\n\n\n    render() {\n\n        return (\n\n            <div>\n\n                {this.props.todos.map(todo => (        \n\n                    //<li key = {todo.id}>{todo.title}</li>\n                    <TodoItem \n                    key = {todo.id} \n                    todo = {todo} \n                    //handleChange funct. passed in from parent allowing access to this comp. child, TodoItem\n                    handleChangeProps={this.props.handleChangeProps}\n                    deleteTodoProps={this.props.deleteTodoProps}\n                    addTodoProps={this.props.addTodoProps}\n                    />\n                    \n\n                ))}\n\n            </div>\n       )\n    }\n}\n\n\n//console.log(TodosList)\nexport default TodosList","import React from \"react\"\n\n\n\n\n\n\n\n\n\nconst Header = () => { // same as function Header() { *code here* }\n    \nconst headerStyle = {\n    padding: \"20px 0\",\n    lineHeight: \"2em\",\n}\n\n    return (\n\n        <header style={headerStyle}>\n\n            <h1 style={{ fontSize: \"50px\", marginBottom: \"15px\", float: \"center\"}}>\n                React Todo App\n            </h1>\n            <p style ={{fontSize: \"14px\"}}>\n                please add to-do item(s) through the input field\n            </p>\n            \n        </header>\n        \n    )\n}\n\n\n//SAME THING\n// function Header() {code here}\n// const Header = () => {code here}\n\n\n\n\n\n\n\n\n\n\nexport default Header ","import React, {Component} from \"react\"\n\n\n\n\n\nclass InputTodo extends Component {\n    \n\n\n    state = {\n\n        title: \" \"\n        //username: \" \"\n        //email: \" \"\n        //password: \" \"\n    \n\n    };\n\n\n\n    onChange = e => {\n\n        this.setState({\n\n           [e.target.name]: e.target.value,\n\n        });\n\n    };\n\n\n    handleSubmit = e => {\n\n        e.preventDefault();\n       //console.log(this.state.title);\n        this.props.addTodoProps(this.state.title);\n        this.setState({\n            title: \"\"\n        });\n    }\n\n    render(){\n\n        return(\n\n            <form onSubmit={this.handleSubmit} className=\"form-container\">\n\n                <input \n                type=\"text\" \n                placeholder=\"Add an Item...\" \n                value={this.state.title} \n                onChange={this.onChange}\n                name=\"title\"\n                className= \"input-text\"\n                />\n\n                <input \n                type = \"submit\" \n                value=\"Submit\" \n                className=\"input-submit\"\n                />\n\n            </form>\n        )\n    }\n}\n\nexport default InputTodo\n\n\n// Since we will be getting data through the user’s interaction \n//(i.e through the input field), this component will, therefore, hold state.\n// For that reason, it will be a class-based component.\n\n//Don’t forget, it can be a functional component if we use React Hooks. \n//Coming to that later in the series.","import React from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport {v4 as uuidv4} from \"uuid\";\n\n\n\nclass ToDoContainer extends React.Component {\n\n   \n\n\n   \n    state = {\n        todos: [\n            {\n                id: uuidv4(),\n                title: \"Setup development environment\",\n                completed: true\n            },\n            {\n                id: uuidv4(),\n                title: \"Develop website and add content\",\n                completed: false\n            },\n            {\n                id: uuidv4(),\n                title: \"Deploy to live server\",\n                completed: false\n            }\n        ]\n    };\n\n\n\n\n    //handle change created in parent container/component \n    //pass in the todos:id as a parameter, return it with handleChange\n    handleChange = (id) => {\n\n        this.setState(prevState => ({\n\n            todos: prevState.todos.map((todo) => {\n\n                if (todo.id === id){\n\n                    todo.completed = !todo.completed;\n                }\n\n                return todo;\n            })\n\n        }))\n\n        console.log(\"clicked\", id)\n    }\n\n    //function to delete items from todo List\n    delTodo = (id) => {\n\n        this.setState({\n\n            todos: [\n\n                ...this.state.todos.filter(todo => {\n\n                    return todo.id !== id;\n                })\n            ]\n        })\n        console.log(\"deleted\", id)\n    };\n    \n    //function to add items to todo list \n    addTodo = title => {\n\n        const newTodo = {\n\n            id: uuidv4(),\n            title: title,\n            completed: false\n\n        };\n\n        this.setState({\n\n            todos: [...this.state.todos, newTodo]\n\n        });\n\n        //for debugging \n        console.log(title);\n    }\n\n    render() {\n\n        return (\n          \n          /*  <div>\n               {this.state.todos.map(todo =>(\n                    <li>{todo.title}</li>\n                ))}\n                \n            </div> */\n\n\n\n                //handle change is passed down to the child comp. TodosList\n            <div className=\"container\">\n                <Header />\n                <InputTodo addTodoProps={this.addTodo} />\n                <TodosList \n                todos={this.state.todos} \n                handleChangeProps ={this.handleChange} \n                deleteTodoProps={this.delTodo} \n                //addTodoProps={this.addTodo}\n                />\n\n            </div>\n\n            \n        )\n    }\n}\n\nexport default ToDoContainer","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\n//component file\nimport ToDoContainer from \"./components/TodoContainer\"\nimport \"./App.css\"\n\n\n\n\n//const element = <h1>Hello friends</h1>\n\n//first arg is what to render second arg is where to render it -> index.html\nReactDOM.render(<ToDoContainer />, document.getElementById(\"root\"))\n\n\n\n//ReactDOM.render(element, document.getElementById(\"root\"))\n"],"sourceRoot":""}